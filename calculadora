import java.awt.BorderLayout;
import org.eclipse.swt.SWT;
import org.eclipse.swt.events.SelectionAdapter;
import org.eclipse.swt.events.SelectionEvent;
import org.eclipse.swt.widgets.Button;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.widgets.Text;
import javax.swing.JOptionPane;

/**
 * Clase que implementa una calculadora con una interfaz gráfica utilizando SWT.
 * Permite realizar operaciones básicas como suma, resta, multiplicación y división.
 * La calculadora también tiene un límite de 5 dígitos en los números.
 * 
 * @author Tu Nombre
 * @version 1.0
 */
public class Calculadora {

    // Constantes
    final int MAX_DIGITS = 5;
    final int MODE_ENTRADA = 0;
    final int MODE_RESULTADO = 1;

    // Variables
    int modo;
    int digito;
    int valor1;
    int valor2;
    String operacion;
    boolean inicializa_resultado;

    private static Text texto_resultado;

    /**
     * Constructor de la clase Calculadora.
     * Inicializa las variables y, si se requiere, dibuja la interfaz gráfica de la calculadora.
     * 
     * @param gui booleano que indica si se debe mostrar la interfaz gráfica.
     */
    public Calculadora(boolean gui) {
        // Inicialización de las variables.
        inicializa();
        
        if (gui == true) {
            dibujaCalculadora();
        }
    }

    /**
     * Dibuja la interfaz gráfica de la calculadora utilizando SWT.
     * 
     * Se crean los botones para los números, operaciones y la visualización del resultado.
     */
    private void dibujaCalculadora() {
        Display display = Display.getDefault();
        Shell shlCalculadora = new Shell();
        shlCalculadora.setSize(259, 250);
        shlCalculadora.setText("Calculadora");

        // Números
        crearBoton(shlCalculadora, "0", 23, 163);
        crearBoton(shlCalculadora, "1", 23, 124);
        crearBoton(shlCalculadora, "2", 69, 124);
        crearBoton(shlCalculadora, "3", 115, 124);
        crearBoton(shlCalculadora, "4", 23, 85);
        crearBoton(shlCalculadora, "5", 69, 85);
        crearBoton(shlCalculadora, "6", 115, 85);
        crearBoton(shlCalculadora, "7", 23, 46);
        crearBoton(shlCalculadora, "8", 69, 46);
        crearBoton(shlCalculadora, "9", 115, 46);

        // Operaciones
        crearOperacion(shlCalculadora, "/", 178, 46);
        crearOperacion(shlCalculadora, "*", 178, 85);
        crearOperacion(shlCalculadora, "+", 178, 124);
        crearOperacion(shlCalculadora, "-", 178, 163);

        // Botón de igual
        Button button_11 = new Button(shlCalculadora, SWT.NONE);
        button_11.addSelectionListener(new SelectionAdapter() {
            @Override
            public void widgetSelected(SelectionEvent e) {
                ejecutarIgual();
            }
        });
        button_11.setText("=");
        button_11.setBounds(69, 163, 86, 33);

        // Texto para mostrar el resultado
        texto_resultado = new Text(shlCalculadora, SWT.BORDER);
        texto_resultado.setText("0");
        texto_resultado.setBounds(22, 19, 196, 21);

        shlCalculadora.open();
        shlCalculadora.layout();
        while (!shlCalculadora.isDisposed()) {
            if (!display.readAndDispatch()) {
                display.sleep();
            }
        }
    }

    /**
     * Crea un botón numérico en la interfaz gráfica.
     * 
     * @param shell Shell donde se coloca el botón.
     * @param texto Texto del botón (número).
     * @param x Posición X del botón.
     * @param y Posición Y del botón.
     */
    private void crearBoton(Shell shell, String texto, int x, int y) {
        Button button = new Button(shell, SWT.NONE);
        button.addSelectionListener(new SelectionAdapter() {
            @Override
            public void widgetSelected(SelectionEvent e) {
                anadeNuevoDigito(Integer.parseInt(texto));
            }
        });
        button.setText(texto);
        button.setBounds(x, y, 40, 33);
    }

    /**
     * Crea un botón para las operaciones básicas en la interfaz gráfica.
     * 
     * @param shell Shell donde se coloca el botón.
     * @param operacion La operación matemática (por ejemplo, +, -, *, /).
     * @param x Posición X del botón.
     * @param y Posición Y del botón.
     */
    private void crearOperacion(Shell shell, String operacion, int x, int y) {
        Button button = new Button(shell, SWT.NONE);
        button.addSelectionListener(new SelectionAdapter() {
            @Override
            public void widgetSelected(SelectionEvent e) {
                ejecutarOperador(operacion);
            }
        });
        button.setText(operacion);
        button.setBounds(x, y, 40, 33);
    }

    /**
     * Inicializa las variables necesarias para la operación de la calculadora.
     */
    public void inicializa() {
        operacion = "null";
        valor1 = 0;
        valor2 = 0;
        modo = MODE_ENTRADA;
        inicializa_resultado = true;
    }

    /**
     * Obtiene el resultado actual de la calculadora como un String.
     * 
     * @return El resultado como String.
     */
    public String getResultadoString() {
        return texto_resultado.getText();
    }

    /**
     * Establece el resultado de la calculadora como un String.
     * 
     * @param s El resultado a mostrar.
     */
    public void setResultadoString(String s) {
        texto_resultado.setText(s);
    }

    /**
     * Obtiene el resultado de la calculadora como un valor entero.
     * 
     * @return El resultado como valor entero.
     */
    public int getResultadoInt() {
        String resultado = texto_resultado.getText();
        return Integer.parseInt(resultado);
    }

    /**
     * Añade un nuevo dígito al número actual en la calculadora.
     * 
     * @param digito El dígito a añadir.
     */
    public void anadeNuevoDigito(int digito) {
        if (inicializa_resultado) setResultadoString("");

        String inputString = getResultadoString();

        if (inputString.indexOf("0") == 0) {
            inputString = inputString.substring(1);
        }

        if ((!inputString.equals("0") || digito > 0) && inputString.length() < MAX_DIGITS) {
            setResultadoString(inputString + digito);
        }

        modo = MODE_ENTRADA;
        inicializa_resultado = false;
    }

    /**
     * Ejecuta la operación correspondiente a la operación matemática seleccionada.
     * 
     * @param new_operacion La operación a realizar (por ejemplo, "+", "-", "*", "/").
     */
    public void ejecutarOperador(String new_operacion) {
        int resultado;

        if (operacion.equals("null")) {
            resultado = getResultadoInt();
            valor1 = resultado;
        } else {
            valor2 = getResultadoInt();
            resultado = ejecutarOperacion();
            muestraResultado(resultado);
            valor1 = resultado;
        }

        inicializa_resultado = true;
        operacion = new_operacion;
    }

    /**
     * Ejecuta la operación matemática basada en la operación seleccionada.
     * 
     * @return El resultado de la operación.
     */
    public int ejecutarOperacion() {
        int resultado = 0;

        switch (operacion) {
            case "/":
                if (valor2 == 0) {
                    JOptionPane.showMessageDialog(null, "No se puede dividir por cero", "Error", JOptionPane.ERROR_MESSAGE);
                    operacion = "null";
                    valor1 = 0;
                    modo = MODE_ENTRADA;
                    inicializa_resultado = true;
                } else {
                    resultado = valor1 / valor2;
                }
                break;
            case "*":
                resultado = valor1 * valor2;
                break;
            case "-":
                resultado = valor1 - valor2;
                break;
            case "+":
                resultado = valor1 + valor2;
                break;
        }

        return resultado;
    }

    /**
     * Muestra el resultado de la operación en la interfaz de la calculadora.
     * 
     * @param resultado El resultado de la operación a mostrar.
     */
    public void muestraResultado(int resultado) {
        setResultadoString(Integer.toString(resultado));
        valor1 = resultado;
        modo = MODE_RESULTADO;
        inicializa_resultado = true;
    }

    /**
     * Método principal que inicia la calculadora con la interfaz gráfica.
     * 
     * @param args Argumentos de la línea de comandos.
     */
    public static void main(String args[]) {
        Calculadora calculadora = new Calculadora(true);
    }
}
